name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  actionlint:
    runs-on: ubuntu-latest
    name: Action Lint
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: raven-actions/actionlint@789059c543ab20522fb3e7240794e13b0f69ad67 # v1.0.3

  zizmor:
    permissions:
      actions: read
      contents: read

      # used in the `job-workflow-ref` job to fetch an OIDC token, which
      # allows the run to determine its ref. That's used to find the default
      # configuration file. This doesn't work from forks. In that case,
      # Zizmor's default config behaviour will be used.
      id-token: write

      # required to comment on pull requests with the results of the check
      pull-requests: write

      # required to upload the results to GitHub's code scanning service. This
      # doesn't work if the repo doesn't have Advanced Security enabled. In that
      # case we'll skip the upload.
      security-events: write

    uses: grafana/shared-workflows/.github/workflows/reusable-zizmor.yml@main
    with:
      fail-severity: informational
      min-severity: informational
      min-confidence: unknown

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install luacheck
        run: |
          sudo apt-get update
          sudo apt-get install -y luarocks
          sudo luarocks install luacheck

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1.13.0
        with:
          cache: true

      - name: Cache StyLua binary
        id: cache-stylua
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cargo/bin/stylua
          key: ${{ runner.os }}-${{ runner.arch }}-stylua-lua52-binary
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-stylua-lua52-

      # We need this feature
      - name: Build and install styLua with lua52 feature
        if: steps.cache-stylua.outputs.cache-hit != 'true'
        run: cargo install stylua --features default,lua52

      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  docs:
    runs-on: ubuntu-latest
    name: Generate Documentation
    steps:
      - name: panvimdoc
        uses: kdheepak/panvimdoc@662fb20304d20c539fb48a0bda628f5165507de7 # v4.0.1
        with:
          vimdoc: rust-target-picker
          version: "Neovim"
          dedupsubheadings: false
          docmappingprojectname: false
          treesitter: true

      - name: Check if documentation is up to date
        run: |
          if ! git diff --quiet; then
            echo "Documentation is not up to date. Please run 'panvimdoc' and commit the changes."
            git diff
            exit 1
          fi
